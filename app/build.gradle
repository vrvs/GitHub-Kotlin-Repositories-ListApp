plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

apply plugin: 'jacoco'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.github.vrvs.githubapp"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

dependencies {
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"
    implementation "androidx.room:room-ktx:$versions.room"
    implementation "androidx.room:room-runtime:$versions.room"
    implementation "com.airbnb.android:lottie:$versions.lottie"
    implementation "com.google.android.material:material:$versions.material"
    implementation "com.squareup.picasso:picasso:$versions.picasso"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutine"
    implementation "io.insert-koin:koin-android:$versions.koin_android"
    implementation "io.insert-koin:koin-android-compat:$versions.koin_android"
    implementation "io.insert-koin:koin-androidx-compose:$versions.koin_android"
    implementation "androidx.legacy:legacy-support-v4:$versions.legacy"
    implementation "com.github.bumptech.glide:glide:$versions.glide"

    annotationProcessor "com.github.bumptech.glide:compiler:$versions.glide"

    kapt "androidx.room:room-compiler:$versions.room"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.kotlin_coroutine"
    testImplementation "junit:junit:$versions.junit"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttp"
    testImplementation "io.insert-koin:koin-test:$versions.koin_android"
    testImplementation "io.insert-koin:koin-test-junit4:$versions.koin_android"
    testImplementation "androidx.test:core:$versions.test"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$versions.mockito_kotlin"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
    testImplementation "org.robolectric:robolectric:$versions.roboletric"

    androidTestImplementation "androidx.test.ext:junit:$versions.ext_junit"
    androidTestImplementation "org.mockito:mockito-android:$versions.mockito"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso_core"
}